language: cpp
# TODO add support for clang and Mac OS X
compiler: gcc
dist: trusty
sudo: false
env:
  global:
    # Ubuntu version
    - LINUX_DIST=trusty
    # Global build options and C++ flags
    # TODO add -Werror?
    - CXX_FLAGS="-Wall -pedantic"
    # Misc
    - RUN_TESTS=true
    - COVERAGE=false
    - NUM_THREADS=4
    - OPENCL_LIB="amdappsdk"
    - AMDAPPSDK_VERSION=300 # OpenCL 2.0

matrix:
  include:
    # g++ 5 comes with Ubuntu 16.04 LTS (Xenial Xerus)
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    # Recent release
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

before_install:
    - eval "${MATRIX_EVAL}"
    # Combine global build options with OS/compiler-dependent options
    - export CMAKE_OPTIONS=${CMAKE_OPTIONS}" "${ENV_CMAKE_OPTIONS}
    - export CXX_FLAGS=${CXX_FLAGS}" "${ENV_CXX_FLAGS}

install:
    # Download and install CMake
    # Also useful stuff here https://stackoverflow.com/q/47222115
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        CMAKE_URL="https://cmake.org/files/v3.10/cmake-3.10.2-Linux-x86_64.tar.gz";
        mkdir cmake && travis_retry wget --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake;
        export PATH=${TRAVIS_BUILD_DIR}/cmake/bin:${PATH};
      else
        brew outdated cmake || brew upgrade cmake;
      fi
    # Print CMake version, just in case
    - cmake --version
    # Download and build Boost
    - travis_retry wget -O boost_1_65_1.tar.gz https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz
    - tar xzf boost_1_65_1.tar.gz
    - pushd boost_1_65_1/
    - ./bootstrap.sh --with-libraries=program_options,filesystem,system,log
    - ./b2 -d0 link=static threading=multi address-model=64
    - popd
    # Install AMD APPSDK (based on Travis configuration from Boost compute)
    # https://github.com/boostorg/compute/blob/master/.travis.yml
    - |
      if [[ ${TRAVIS_OS_NAME} == "linux" && ${OPENCL_LIB} == "amdappsdk" ]]; then
        mkdir -p ${OPENCL_ROOT}
        bash .travis/amd_sdk.sh ${AMDAPPSDK_VERSION}
        tar -xjf AMD-SDK.tar.bz2
        export OPENCL_VENDOR_PATH=${AMDAPPSDKROOT}/etc/OpenCL/vendors
        mkdir -p ${OPENCL_VENDOR_PATH}
        sh AMD-APP-SDK*.sh --tar -xf -C ${AMDAPPSDKROOT}
        echo libamdocl64.so > ${OPENCL_VENDOR_PATH}/amdocl64.icd
        if [[ ${AMDAPPSDK_VERSION} == "300" ]]; then
          export LD_LIBRARY_PATH=${AMDAPPSDKROOT}/lib/x86_64/sdk:${LD_LIBRARY_PATH}
          export CMAKE_LIBRARY_PATH=${AMDAPPSDKROOT}/lib/x86_64/sdk
          cp ${AMDAPPSDKROOT}/lib/x86_64/libamdocl12cl64.so ${AMDAPPSDKROOT}/lib/x86_64/sdk/libamdocl12cl64.so
        # 291
        else
          export LD_LIBRARY_PATH=${AMDAPPSDKROOT}/lib/x86_64:${LD_LIBRARY_PATH}
          export CMAKE_LIBRARY_PATH=${AMDAPPSDKROOT}/lib/x86_64
        fi
        chmod +x ${AMDAPPSDKROOT}/bin/x86_64/clinfo
        ${AMDAPPSDKROOT}/bin/x86_64/clinfo
      fi

script:
    # Build all tools and unit tests
     - echo "Building all tools and unit tests"
     - mkdir -p build
     - pushd build
     - cmake ${CMAKE_OPTIONS} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DBOOST_ROOT="../boost_1_65_1" ..
     - make
     # Run unit tests
     - echo "Running unit tests"
     - ./unit_tests/unit_tests
